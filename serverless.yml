service: hakopita-fast-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: ap-northeast-1
  timeout: 30
  environment:
    ENV: ${opt:stage, 'dev'}
    VERSION: ${env:VERSION, 'unknown'}
    DB_HOST: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DB_HOST}
    DB_PORT: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DB_PORT}
    DB_USER: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DB_USER}
    DB_PASS: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DB_PASS}
    DB_NAME: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DB_NAME}
    DATABASE_URL: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DATABASE_URL}
    APP_NAME: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/APP_NAME}
    DEBUG: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/DEBUG}
    LOG_LEVEL: ${ssm:/hakopita-fast-api-${opt:stage, 'dev'}/LOG_LEVEL}

  httpApi:
    name: hakopita-fast-api-gw-${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource: 
            # - "arn:aws:ssm:${self:provider.region}:*:parameter/hakopita/*"
            - "arn:aws:ssm:${self:provider.region}:*:parameter/*"

functions:
  api:
    handler: lambda_handler.lambda_handler
    name: hakopita-fast-api-${opt:stage, 'dev'}
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
    vpc:
      securityGroupIds:
        - ${ssm:/hakopita/security_group_id}
      subnetIds:
        - ${ssm:/hakopita/subnet_id}

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    layer: false
    slim: false
    usePoetry: true
    poetryPyprojectFile: pyproject.toml
    noDeploy:
      - coverage
      - pytest
      - black
      - isort
      - flake8 